package com.woniu.godaji.pojo;

import java.util.ArrayList;
import java.util.List;

public class BtcPreferentialwareExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table btc_PreferentialWare
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table btc_PreferentialWare
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table btc_PreferentialWare
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table btc_PreferentialWare
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    public BtcPreferentialwareExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table btc_PreferentialWare
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table btc_PreferentialWare
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table btc_PreferentialWare
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table btc_PreferentialWare
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table btc_PreferentialWare
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table btc_PreferentialWare
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table btc_PreferentialWare
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table btc_PreferentialWare
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table btc_PreferentialWare
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table btc_PreferentialWare
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table btc_PreferentialWare
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andBtcPreferentialwareidIsNull() {
            addCriterion("btc_PreferentialWareID is null");
            return (Criteria) this;
        }

        public Criteria andBtcPreferentialwareidIsNotNull() {
            addCriterion("btc_PreferentialWareID is not null");
            return (Criteria) this;
        }

        public Criteria andBtcPreferentialwareidEqualTo(Integer value) {
            addCriterion("btc_PreferentialWareID =", value, "btcPreferentialwareid");
            return (Criteria) this;
        }

        public Criteria andBtcPreferentialwareidNotEqualTo(Integer value) {
            addCriterion("btc_PreferentialWareID <>", value, "btcPreferentialwareid");
            return (Criteria) this;
        }

        public Criteria andBtcPreferentialwareidGreaterThan(Integer value) {
            addCriterion("btc_PreferentialWareID >", value, "btcPreferentialwareid");
            return (Criteria) this;
        }

        public Criteria andBtcPreferentialwareidGreaterThanOrEqualTo(Integer value) {
            addCriterion("btc_PreferentialWareID >=", value, "btcPreferentialwareid");
            return (Criteria) this;
        }

        public Criteria andBtcPreferentialwareidLessThan(Integer value) {
            addCriterion("btc_PreferentialWareID <", value, "btcPreferentialwareid");
            return (Criteria) this;
        }

        public Criteria andBtcPreferentialwareidLessThanOrEqualTo(Integer value) {
            addCriterion("btc_PreferentialWareID <=", value, "btcPreferentialwareid");
            return (Criteria) this;
        }

        public Criteria andBtcPreferentialwareidIn(List<Integer> values) {
            addCriterion("btc_PreferentialWareID in", values, "btcPreferentialwareid");
            return (Criteria) this;
        }

        public Criteria andBtcPreferentialwareidNotIn(List<Integer> values) {
            addCriterion("btc_PreferentialWareID not in", values, "btcPreferentialwareid");
            return (Criteria) this;
        }

        public Criteria andBtcPreferentialwareidBetween(Integer value1, Integer value2) {
            addCriterion("btc_PreferentialWareID between", value1, value2, "btcPreferentialwareid");
            return (Criteria) this;
        }

        public Criteria andBtcPreferentialwareidNotBetween(Integer value1, Integer value2) {
            addCriterion("btc_PreferentialWareID not between", value1, value2, "btcPreferentialwareid");
            return (Criteria) this;
        }

        public Criteria andBtcPkWareidIsNull() {
            addCriterion("btc_pk_wareID is null");
            return (Criteria) this;
        }

        public Criteria andBtcPkWareidIsNotNull() {
            addCriterion("btc_pk_wareID is not null");
            return (Criteria) this;
        }

        public Criteria andBtcPkWareidEqualTo(Integer value) {
            addCriterion("btc_pk_wareID =", value, "btcPkWareid");
            return (Criteria) this;
        }

        public Criteria andBtcPkWareidNotEqualTo(Integer value) {
            addCriterion("btc_pk_wareID <>", value, "btcPkWareid");
            return (Criteria) this;
        }

        public Criteria andBtcPkWareidGreaterThan(Integer value) {
            addCriterion("btc_pk_wareID >", value, "btcPkWareid");
            return (Criteria) this;
        }

        public Criteria andBtcPkWareidGreaterThanOrEqualTo(Integer value) {
            addCriterion("btc_pk_wareID >=", value, "btcPkWareid");
            return (Criteria) this;
        }

        public Criteria andBtcPkWareidLessThan(Integer value) {
            addCriterion("btc_pk_wareID <", value, "btcPkWareid");
            return (Criteria) this;
        }

        public Criteria andBtcPkWareidLessThanOrEqualTo(Integer value) {
            addCriterion("btc_pk_wareID <=", value, "btcPkWareid");
            return (Criteria) this;
        }

        public Criteria andBtcPkWareidIn(List<Integer> values) {
            addCriterion("btc_pk_wareID in", values, "btcPkWareid");
            return (Criteria) this;
        }

        public Criteria andBtcPkWareidNotIn(List<Integer> values) {
            addCriterion("btc_pk_wareID not in", values, "btcPkWareid");
            return (Criteria) this;
        }

        public Criteria andBtcPkWareidBetween(Integer value1, Integer value2) {
            addCriterion("btc_pk_wareID between", value1, value2, "btcPkWareid");
            return (Criteria) this;
        }

        public Criteria andBtcPkWareidNotBetween(Integer value1, Integer value2) {
            addCriterion("btc_pk_wareID not between", value1, value2, "btcPkWareid");
            return (Criteria) this;
        }

        public Criteria andWareidIsNull() {
            addCriterion("wareID is null");
            return (Criteria) this;
        }

        public Criteria andWareidIsNotNull() {
            addCriterion("wareID is not null");
            return (Criteria) this;
        }

        public Criteria andWareidEqualTo(Integer value) {
            addCriterion("wareID =", value, "wareid");
            return (Criteria) this;
        }

        public Criteria andWareidNotEqualTo(Integer value) {
            addCriterion("wareID <>", value, "wareid");
            return (Criteria) this;
        }

        public Criteria andWareidGreaterThan(Integer value) {
            addCriterion("wareID >", value, "wareid");
            return (Criteria) this;
        }

        public Criteria andWareidGreaterThanOrEqualTo(Integer value) {
            addCriterion("wareID >=", value, "wareid");
            return (Criteria) this;
        }

        public Criteria andWareidLessThan(Integer value) {
            addCriterion("wareID <", value, "wareid");
            return (Criteria) this;
        }

        public Criteria andWareidLessThanOrEqualTo(Integer value) {
            addCriterion("wareID <=", value, "wareid");
            return (Criteria) this;
        }

        public Criteria andWareidIn(List<Integer> values) {
            addCriterion("wareID in", values, "wareid");
            return (Criteria) this;
        }

        public Criteria andWareidNotIn(List<Integer> values) {
            addCriterion("wareID not in", values, "wareid");
            return (Criteria) this;
        }

        public Criteria andWareidBetween(Integer value1, Integer value2) {
            addCriterion("wareID between", value1, value2, "wareid");
            return (Criteria) this;
        }

        public Criteria andWareidNotBetween(Integer value1, Integer value2) {
            addCriterion("wareID not between", value1, value2, "wareid");
            return (Criteria) this;
        }

        public Criteria andWarenumIsNull() {
            addCriterion("wareNum is null");
            return (Criteria) this;
        }

        public Criteria andWarenumIsNotNull() {
            addCriterion("wareNum is not null");
            return (Criteria) this;
        }

        public Criteria andWarenumEqualTo(Integer value) {
            addCriterion("wareNum =", value, "warenum");
            return (Criteria) this;
        }

        public Criteria andWarenumNotEqualTo(Integer value) {
            addCriterion("wareNum <>", value, "warenum");
            return (Criteria) this;
        }

        public Criteria andWarenumGreaterThan(Integer value) {
            addCriterion("wareNum >", value, "warenum");
            return (Criteria) this;
        }

        public Criteria andWarenumGreaterThanOrEqualTo(Integer value) {
            addCriterion("wareNum >=", value, "warenum");
            return (Criteria) this;
        }

        public Criteria andWarenumLessThan(Integer value) {
            addCriterion("wareNum <", value, "warenum");
            return (Criteria) this;
        }

        public Criteria andWarenumLessThanOrEqualTo(Integer value) {
            addCriterion("wareNum <=", value, "warenum");
            return (Criteria) this;
        }

        public Criteria andWarenumIn(List<Integer> values) {
            addCriterion("wareNum in", values, "warenum");
            return (Criteria) this;
        }

        public Criteria andWarenumNotIn(List<Integer> values) {
            addCriterion("wareNum not in", values, "warenum");
            return (Criteria) this;
        }

        public Criteria andWarenumBetween(Integer value1, Integer value2) {
            addCriterion("wareNum between", value1, value2, "warenum");
            return (Criteria) this;
        }

        public Criteria andWarenumNotBetween(Integer value1, Integer value2) {
            addCriterion("wareNum not between", value1, value2, "warenum");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table btc_PreferentialWare
     *
     * @mbggenerated do_not_delete_during_merge Tue Feb 18 00:31:41 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table btc_PreferentialWare
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}