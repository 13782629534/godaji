<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.woniu.godaji.mapper.BtcMarketWareclassificationtypeMapper" >
  <resultMap id="BaseResultMap" type="com.woniu.godaji.pojo.BtcMarketWareclassificationtype" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 18 00:31:41 CST 2020.
    -->
    <id column="wareClassificationTypeID" property="wareclassificationtypeid" jdbcType="INTEGER" />
    <result column="storeID" property="storeid" jdbcType="INTEGER" />
    <result column="wareClassificationTypeCode" property="wareclassificationtypecode" jdbcType="VARCHAR" />
    <result column="wareClassificationTypeName" property="wareclassificationtypename" jdbcType="VARCHAR" />
    <result column="parentWareClassificationTypeID" property="parentwareclassificationtypeid" jdbcType="INTEGER" />
    <result column="isDelete" property="isdelete" jdbcType="INTEGER" />
    <result column="isCurrent" property="iscurrent" jdbcType="INTEGER" />
    <result column="sortNum" property="sortnum" jdbcType="INTEGER" />
    <result column="theNote" property="thenote" jdbcType="VARCHAR" />
    <result column="fid" property="fid" jdbcType="VARCHAR" />
    <result column="fparentid" property="fparentid" jdbcType="VARCHAR" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 18 00:31:41 CST 2020.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 18 00:31:41 CST 2020.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 18 00:31:41 CST 2020.
    -->
    wareClassificationTypeID, storeID, wareClassificationTypeCode, wareClassificationTypeName, 
    parentWareClassificationTypeID, isDelete, isCurrent, sortNum, theNote, fid, fparentid, 
    flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.woniu.godaji.pojo.BtcMarketWareclassificationtypeExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 18 00:31:41 CST 2020.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from BTC_market_wareClassificationType
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 18 00:31:41 CST 2020.
    -->
    select 
    <include refid="Base_Column_List" />
    from BTC_market_wareClassificationType
    where wareClassificationTypeID = #{wareclassificationtypeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 18 00:31:41 CST 2020.
    -->
    delete from BTC_market_wareClassificationType
    where wareClassificationTypeID = #{wareclassificationtypeid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.woniu.godaji.pojo.BtcMarketWareclassificationtypeExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 18 00:31:41 CST 2020.
    -->
    delete from BTC_market_wareClassificationType
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.woniu.godaji.pojo.BtcMarketWareclassificationtype" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 18 00:31:41 CST 2020.
    -->
    insert into BTC_market_wareClassificationType (wareClassificationTypeID, storeID, 
      wareClassificationTypeCode, wareClassificationTypeName, 
      parentWareClassificationTypeID, isDelete, 
      isCurrent, sortNum, theNote, 
      fid, fparentid, flag
      )
    values (#{wareclassificationtypeid,jdbcType=INTEGER}, #{storeid,jdbcType=INTEGER}, 
      #{wareclassificationtypecode,jdbcType=VARCHAR}, #{wareclassificationtypename,jdbcType=VARCHAR}, 
      #{parentwareclassificationtypeid,jdbcType=INTEGER}, #{isdelete,jdbcType=INTEGER}, 
      #{iscurrent,jdbcType=INTEGER}, #{sortnum,jdbcType=INTEGER}, #{thenote,jdbcType=VARCHAR}, 
      #{fid,jdbcType=VARCHAR}, #{fparentid,jdbcType=VARCHAR}, #{flag,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.woniu.godaji.pojo.BtcMarketWareclassificationtype" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 18 00:31:41 CST 2020.
    -->
    insert into BTC_market_wareClassificationType
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="wareclassificationtypeid != null" >
        wareClassificationTypeID,
      </if>
      <if test="storeid != null" >
        storeID,
      </if>
      <if test="wareclassificationtypecode != null" >
        wareClassificationTypeCode,
      </if>
      <if test="wareclassificationtypename != null" >
        wareClassificationTypeName,
      </if>
      <if test="parentwareclassificationtypeid != null" >
        parentWareClassificationTypeID,
      </if>
      <if test="isdelete != null" >
        isDelete,
      </if>
      <if test="iscurrent != null" >
        isCurrent,
      </if>
      <if test="sortnum != null" >
        sortNum,
      </if>
      <if test="thenote != null" >
        theNote,
      </if>
      <if test="fid != null" >
        fid,
      </if>
      <if test="fparentid != null" >
        fparentid,
      </if>
      <if test="flag != null" >
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="wareclassificationtypeid != null" >
        #{wareclassificationtypeid,jdbcType=INTEGER},
      </if>
      <if test="storeid != null" >
        #{storeid,jdbcType=INTEGER},
      </if>
      <if test="wareclassificationtypecode != null" >
        #{wareclassificationtypecode,jdbcType=VARCHAR},
      </if>
      <if test="wareclassificationtypename != null" >
        #{wareclassificationtypename,jdbcType=VARCHAR},
      </if>
      <if test="parentwareclassificationtypeid != null" >
        #{parentwareclassificationtypeid,jdbcType=INTEGER},
      </if>
      <if test="isdelete != null" >
        #{isdelete,jdbcType=INTEGER},
      </if>
      <if test="iscurrent != null" >
        #{iscurrent,jdbcType=INTEGER},
      </if>
      <if test="sortnum != null" >
        #{sortnum,jdbcType=INTEGER},
      </if>
      <if test="thenote != null" >
        #{thenote,jdbcType=VARCHAR},
      </if>
      <if test="fid != null" >
        #{fid,jdbcType=VARCHAR},
      </if>
      <if test="fparentid != null" >
        #{fparentid,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.woniu.godaji.pojo.BtcMarketWareclassificationtypeExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 18 00:31:41 CST 2020.
    -->
    select count(*) from BTC_market_wareClassificationType
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 18 00:31:41 CST 2020.
    -->
    update BTC_market_wareClassificationType
    <set >
      <if test="record.wareclassificationtypeid != null" >
        wareClassificationTypeID = #{record.wareclassificationtypeid,jdbcType=INTEGER},
      </if>
      <if test="record.storeid != null" >
        storeID = #{record.storeid,jdbcType=INTEGER},
      </if>
      <if test="record.wareclassificationtypecode != null" >
        wareClassificationTypeCode = #{record.wareclassificationtypecode,jdbcType=VARCHAR},
      </if>
      <if test="record.wareclassificationtypename != null" >
        wareClassificationTypeName = #{record.wareclassificationtypename,jdbcType=VARCHAR},
      </if>
      <if test="record.parentwareclassificationtypeid != null" >
        parentWareClassificationTypeID = #{record.parentwareclassificationtypeid,jdbcType=INTEGER},
      </if>
      <if test="record.isdelete != null" >
        isDelete = #{record.isdelete,jdbcType=INTEGER},
      </if>
      <if test="record.iscurrent != null" >
        isCurrent = #{record.iscurrent,jdbcType=INTEGER},
      </if>
      <if test="record.sortnum != null" >
        sortNum = #{record.sortnum,jdbcType=INTEGER},
      </if>
      <if test="record.thenote != null" >
        theNote = #{record.thenote,jdbcType=VARCHAR},
      </if>
      <if test="record.fid != null" >
        fid = #{record.fid,jdbcType=VARCHAR},
      </if>
      <if test="record.fparentid != null" >
        fparentid = #{record.fparentid,jdbcType=VARCHAR},
      </if>
      <if test="record.flag != null" >
        flag = #{record.flag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 18 00:31:41 CST 2020.
    -->
    update BTC_market_wareClassificationType
    set wareClassificationTypeID = #{record.wareclassificationtypeid,jdbcType=INTEGER},
      storeID = #{record.storeid,jdbcType=INTEGER},
      wareClassificationTypeCode = #{record.wareclassificationtypecode,jdbcType=VARCHAR},
      wareClassificationTypeName = #{record.wareclassificationtypename,jdbcType=VARCHAR},
      parentWareClassificationTypeID = #{record.parentwareclassificationtypeid,jdbcType=INTEGER},
      isDelete = #{record.isdelete,jdbcType=INTEGER},
      isCurrent = #{record.iscurrent,jdbcType=INTEGER},
      sortNum = #{record.sortnum,jdbcType=INTEGER},
      theNote = #{record.thenote,jdbcType=VARCHAR},
      fid = #{record.fid,jdbcType=VARCHAR},
      fparentid = #{record.fparentid,jdbcType=VARCHAR},
      flag = #{record.flag,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.woniu.godaji.pojo.BtcMarketWareclassificationtype" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 18 00:31:41 CST 2020.
    -->
    update BTC_market_wareClassificationType
    <set >
      <if test="storeid != null" >
        storeID = #{storeid,jdbcType=INTEGER},
      </if>
      <if test="wareclassificationtypecode != null" >
        wareClassificationTypeCode = #{wareclassificationtypecode,jdbcType=VARCHAR},
      </if>
      <if test="wareclassificationtypename != null" >
        wareClassificationTypeName = #{wareclassificationtypename,jdbcType=VARCHAR},
      </if>
      <if test="parentwareclassificationtypeid != null" >
        parentWareClassificationTypeID = #{parentwareclassificationtypeid,jdbcType=INTEGER},
      </if>
      <if test="isdelete != null" >
        isDelete = #{isdelete,jdbcType=INTEGER},
      </if>
      <if test="iscurrent != null" >
        isCurrent = #{iscurrent,jdbcType=INTEGER},
      </if>
      <if test="sortnum != null" >
        sortNum = #{sortnum,jdbcType=INTEGER},
      </if>
      <if test="thenote != null" >
        theNote = #{thenote,jdbcType=VARCHAR},
      </if>
      <if test="fid != null" >
        fid = #{fid,jdbcType=VARCHAR},
      </if>
      <if test="fparentid != null" >
        fparentid = #{fparentid,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where wareClassificationTypeID = #{wareclassificationtypeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.woniu.godaji.pojo.BtcMarketWareclassificationtype" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 18 00:31:41 CST 2020.
    -->
    update BTC_market_wareClassificationType
    set storeID = #{storeid,jdbcType=INTEGER},
      wareClassificationTypeCode = #{wareclassificationtypecode,jdbcType=VARCHAR},
      wareClassificationTypeName = #{wareclassificationtypename,jdbcType=VARCHAR},
      parentWareClassificationTypeID = #{parentwareclassificationtypeid,jdbcType=INTEGER},
      isDelete = #{isdelete,jdbcType=INTEGER},
      isCurrent = #{iscurrent,jdbcType=INTEGER},
      sortNum = #{sortnum,jdbcType=INTEGER},
      theNote = #{thenote,jdbcType=VARCHAR},
      fid = #{fid,jdbcType=VARCHAR},
      fparentid = #{fparentid,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER}
    where wareClassificationTypeID = #{wareclassificationtypeid,jdbcType=INTEGER}
  </update>
</mapper>