package com.woniu.godaji.pojo;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class BtcPreferentialPackagesExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table btc_Preferential_packages
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table btc_Preferential_packages
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table btc_Preferential_packages
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table btc_Preferential_packages
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    public BtcPreferentialPackagesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table btc_Preferential_packages
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table btc_Preferential_packages
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table btc_Preferential_packages
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table btc_Preferential_packages
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table btc_Preferential_packages
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table btc_Preferential_packages
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table btc_Preferential_packages
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table btc_Preferential_packages
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table btc_Preferential_packages
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table btc_Preferential_packages
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table btc_Preferential_packages
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andBtcPpidIsNull() {
            addCriterion("btc_ppID is null");
            return (Criteria) this;
        }

        public Criteria andBtcPpidIsNotNull() {
            addCriterion("btc_ppID is not null");
            return (Criteria) this;
        }

        public Criteria andBtcPpidEqualTo(Integer value) {
            addCriterion("btc_ppID =", value, "btcPpid");
            return (Criteria) this;
        }

        public Criteria andBtcPpidNotEqualTo(Integer value) {
            addCriterion("btc_ppID <>", value, "btcPpid");
            return (Criteria) this;
        }

        public Criteria andBtcPpidGreaterThan(Integer value) {
            addCriterion("btc_ppID >", value, "btcPpid");
            return (Criteria) this;
        }

        public Criteria andBtcPpidGreaterThanOrEqualTo(Integer value) {
            addCriterion("btc_ppID >=", value, "btcPpid");
            return (Criteria) this;
        }

        public Criteria andBtcPpidLessThan(Integer value) {
            addCriterion("btc_ppID <", value, "btcPpid");
            return (Criteria) this;
        }

        public Criteria andBtcPpidLessThanOrEqualTo(Integer value) {
            addCriterion("btc_ppID <=", value, "btcPpid");
            return (Criteria) this;
        }

        public Criteria andBtcPpidIn(List<Integer> values) {
            addCriterion("btc_ppID in", values, "btcPpid");
            return (Criteria) this;
        }

        public Criteria andBtcPpidNotIn(List<Integer> values) {
            addCriterion("btc_ppID not in", values, "btcPpid");
            return (Criteria) this;
        }

        public Criteria andBtcPpidBetween(Integer value1, Integer value2) {
            addCriterion("btc_ppID between", value1, value2, "btcPpid");
            return (Criteria) this;
        }

        public Criteria andBtcPpidNotBetween(Integer value1, Integer value2) {
            addCriterion("btc_ppID not between", value1, value2, "btcPpid");
            return (Criteria) this;
        }

        public Criteria andBtcPpnameIsNull() {
            addCriterion("btc_ppName is null");
            return (Criteria) this;
        }

        public Criteria andBtcPpnameIsNotNull() {
            addCriterion("btc_ppName is not null");
            return (Criteria) this;
        }

        public Criteria andBtcPpnameEqualTo(String value) {
            addCriterion("btc_ppName =", value, "btcPpname");
            return (Criteria) this;
        }

        public Criteria andBtcPpnameNotEqualTo(String value) {
            addCriterion("btc_ppName <>", value, "btcPpname");
            return (Criteria) this;
        }

        public Criteria andBtcPpnameGreaterThan(String value) {
            addCriterion("btc_ppName >", value, "btcPpname");
            return (Criteria) this;
        }

        public Criteria andBtcPpnameGreaterThanOrEqualTo(String value) {
            addCriterion("btc_ppName >=", value, "btcPpname");
            return (Criteria) this;
        }

        public Criteria andBtcPpnameLessThan(String value) {
            addCriterion("btc_ppName <", value, "btcPpname");
            return (Criteria) this;
        }

        public Criteria andBtcPpnameLessThanOrEqualTo(String value) {
            addCriterion("btc_ppName <=", value, "btcPpname");
            return (Criteria) this;
        }

        public Criteria andBtcPpnameLike(String value) {
            addCriterion("btc_ppName like", value, "btcPpname");
            return (Criteria) this;
        }

        public Criteria andBtcPpnameNotLike(String value) {
            addCriterion("btc_ppName not like", value, "btcPpname");
            return (Criteria) this;
        }

        public Criteria andBtcPpnameIn(List<String> values) {
            addCriterion("btc_ppName in", values, "btcPpname");
            return (Criteria) this;
        }

        public Criteria andBtcPpnameNotIn(List<String> values) {
            addCriterion("btc_ppName not in", values, "btcPpname");
            return (Criteria) this;
        }

        public Criteria andBtcPpnameBetween(String value1, String value2) {
            addCriterion("btc_ppName between", value1, value2, "btcPpname");
            return (Criteria) this;
        }

        public Criteria andBtcPpnameNotBetween(String value1, String value2) {
            addCriterion("btc_ppName not between", value1, value2, "btcPpname");
            return (Criteria) this;
        }

        public Criteria andBtcPppriceIsNull() {
            addCriterion("btc_ppPrice is null");
            return (Criteria) this;
        }

        public Criteria andBtcPppriceIsNotNull() {
            addCriterion("btc_ppPrice is not null");
            return (Criteria) this;
        }

        public Criteria andBtcPppriceEqualTo(BigDecimal value) {
            addCriterion("btc_ppPrice =", value, "btcPpprice");
            return (Criteria) this;
        }

        public Criteria andBtcPppriceNotEqualTo(BigDecimal value) {
            addCriterion("btc_ppPrice <>", value, "btcPpprice");
            return (Criteria) this;
        }

        public Criteria andBtcPppriceGreaterThan(BigDecimal value) {
            addCriterion("btc_ppPrice >", value, "btcPpprice");
            return (Criteria) this;
        }

        public Criteria andBtcPppriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("btc_ppPrice >=", value, "btcPpprice");
            return (Criteria) this;
        }

        public Criteria andBtcPppriceLessThan(BigDecimal value) {
            addCriterion("btc_ppPrice <", value, "btcPpprice");
            return (Criteria) this;
        }

        public Criteria andBtcPppriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("btc_ppPrice <=", value, "btcPpprice");
            return (Criteria) this;
        }

        public Criteria andBtcPppriceIn(List<BigDecimal> values) {
            addCriterion("btc_ppPrice in", values, "btcPpprice");
            return (Criteria) this;
        }

        public Criteria andBtcPppriceNotIn(List<BigDecimal> values) {
            addCriterion("btc_ppPrice not in", values, "btcPpprice");
            return (Criteria) this;
        }

        public Criteria andBtcPppriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("btc_ppPrice between", value1, value2, "btcPpprice");
            return (Criteria) this;
        }

        public Criteria andBtcPppriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("btc_ppPrice not between", value1, value2, "btcPpprice");
            return (Criteria) this;
        }

        public Criteria andWareidIsNull() {
            addCriterion("wareID is null");
            return (Criteria) this;
        }

        public Criteria andWareidIsNotNull() {
            addCriterion("wareID is not null");
            return (Criteria) this;
        }

        public Criteria andWareidEqualTo(Integer value) {
            addCriterion("wareID =", value, "wareid");
            return (Criteria) this;
        }

        public Criteria andWareidNotEqualTo(Integer value) {
            addCriterion("wareID <>", value, "wareid");
            return (Criteria) this;
        }

        public Criteria andWareidGreaterThan(Integer value) {
            addCriterion("wareID >", value, "wareid");
            return (Criteria) this;
        }

        public Criteria andWareidGreaterThanOrEqualTo(Integer value) {
            addCriterion("wareID >=", value, "wareid");
            return (Criteria) this;
        }

        public Criteria andWareidLessThan(Integer value) {
            addCriterion("wareID <", value, "wareid");
            return (Criteria) this;
        }

        public Criteria andWareidLessThanOrEqualTo(Integer value) {
            addCriterion("wareID <=", value, "wareid");
            return (Criteria) this;
        }

        public Criteria andWareidIn(List<Integer> values) {
            addCriterion("wareID in", values, "wareid");
            return (Criteria) this;
        }

        public Criteria andWareidNotIn(List<Integer> values) {
            addCriterion("wareID not in", values, "wareid");
            return (Criteria) this;
        }

        public Criteria andWareidBetween(Integer value1, Integer value2) {
            addCriterion("wareID between", value1, value2, "wareid");
            return (Criteria) this;
        }

        public Criteria andWareidNotBetween(Integer value1, Integer value2) {
            addCriterion("wareID not between", value1, value2, "wareid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table btc_Preferential_packages
     *
     * @mbggenerated do_not_delete_during_merge Tue Feb 18 00:31:41 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table btc_Preferential_packages
     *
     * @mbggenerated Tue Feb 18 00:31:41 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}